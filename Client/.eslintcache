[{"/opt/lampp/htdocs/testReacthook/Client/src/index.js":"1","/opt/lampp/htdocs/testReacthook/Client/src/App.js":"2","/opt/lampp/htdocs/testReacthook/Client/src/reportWebVitals.js":"3","/opt/lampp/htdocs/testReacthook/Client/src/Components/Category/List.js":"4","/opt/lampp/htdocs/testReacthook/Client/src/Components/Category/Create.js":"5","/opt/lampp/htdocs/testReacthook/Client/src/Components/Category/Edit.js":"6","/opt/lampp/htdocs/testReacthook/Client/src/Components/Services/CategoryService.js":"7"},{"size":547,"mtime":1607618651827,"results":"8","hashOfConfig":"9"},{"size":754,"mtime":1607618651775,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1607618651839,"results":"11","hashOfConfig":"9"},{"size":2562,"mtime":1607659681870,"results":"12","hashOfConfig":"9"},{"size":1693,"mtime":1607618651795,"results":"13","hashOfConfig":"9"},{"size":2208,"mtime":1607618651799,"results":"14","hashOfConfig":"9"},{"size":1252,"mtime":1607618651823,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"rrd8ul",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/opt/lampp/htdocs/testReacthook/Client/src/index.js",[],["32","33"],"/opt/lampp/htdocs/testReacthook/Client/src/App.js",[],"/opt/lampp/htdocs/testReacthook/Client/src/reportWebVitals.js",[],"/opt/lampp/htdocs/testReacthook/Client/src/Components/Category/List.js",[],"/opt/lampp/htdocs/testReacthook/Client/src/Components/Category/Create.js",[],"/opt/lampp/htdocs/testReacthook/Client/src/Components/Category/Edit.js",["34"],"import React, { useState, useEffect } from 'react';\nimport \"../category.css\";\nimport {\n     Link\n  } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\n\nimport CategoryService from \"./../Services/CategoryService\"\n\nfunction Edit(props){\n\n    const [id, setId] = useState(null);\n    const [name, setName] = useState('');\n\n    useEffect(()=>{\n            async function fetchCategoryById(){\n                let id = props.match.params.id;\n                const res = await CategoryService.get(id);\n\n                if(res.success){\n                    console.log(res.data);\n                    const data =res.data\n                    setId(data.id)\n                    setName(data.name)\n                }else{\n                    alert(res.message)\n                }\n            }\n            fetchCategoryById();\n\n    },[])\n\n    const updateCategory = async () => {\n\n        const data ={\n            id, name\n        }\n\n        const res = await CategoryService.update(data);\n        if(res.success){\n            alert(res.message)\n        }else{\n            alert(res.message)\n        }\n    }\n\n\n\n    return(\n        <div>\n            <Container>\n            <Row>\n                <Col><h3>Edit Category </h3></Col>\n                <Col>\n                <Link to=\"/\">\n                    <Button variant=\"secondary\" size=\"sm\" id=\"btn\">\n                    Back\n                </Button>\n                </Link>\n                </Col>\n            </Row>\n             <Form>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Category Name</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter name\" value={name}\n                    onChange={(event)=>setName(event.target.value)} />\n\n                </Form.Group>\n\n\n                <Button onClick={()=>updateCategory()} variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n             </Form>\n            </Container>\n        </div>\n\n        )\n    }\n\nexport default Edit;","/opt/lampp/htdocs/testReacthook/Client/src/Components/Services/CategoryService.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":36,"column":7,"nodeType":"41","endLine":36,"endColumn":9,"suggestions":"42"},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["45"],"no-global-assign","no-unsafe-negation",{"desc":"46","fix":"47"},"Update the dependencies array to be: [props.match.params.id]",{"range":"48","text":"49"},[1011,1013],"[props.match.params.id]"]